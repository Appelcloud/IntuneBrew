#!/bin/bash
# Uninstall script for Microsoft Office
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling Microsoft Office..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping Microsoft Office if running..."
pkill -f "Microsoft Office" 2>/dev/null || true

# Unload service com.microsoft.office.licensing.helper
echo "Unloading service com.microsoft.office.licensing.helper..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.office.licensing.helper.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.office.licensing.helper.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.office.licensing.helper.plist 2>/dev/null || true

# Unload service com.microsoft.office.licensingV2.helper
echo "Unloading service com.microsoft.office.licensingV2.helper..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.office.licensingV2.helper.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.office.licensingV2.helper.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.office.licensingV2.helper.plist 2>/dev/null || true

# Unload service com.microsoft.OneDriveStandaloneUpdater
echo "Unloading service com.microsoft.OneDriveStandaloneUpdater..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdater.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.OneDriveStandaloneUpdater.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdater.plist 2>/dev/null || true

# Unload service com.microsoft.OneDriveStandaloneUpdaterDaemon
echo "Unloading service com.microsoft.OneDriveStandaloneUpdaterDaemon..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.OneDriveStandaloneUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdaterDaemon.plist 2>/dev/null || true

# Unload service com.microsoft.OneDriveUpdaterDaemon
echo "Unloading service com.microsoft.OneDriveUpdaterDaemon..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.OneDriveUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.OneDriveUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.OneDriveUpdaterDaemon.plist 2>/dev/null || true

# Unload service com.microsoft.SyncReporter
echo "Unloading service com.microsoft.SyncReporter..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.SyncReporter.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.SyncReporter.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.SyncReporter.plist 2>/dev/null || true

# Kill application with bundle ID com.microsoft.autoupdate2 if running
echo "Stopping application with bundle ID com.microsoft.autoupdate2 if running..."
killall -9 "com.microsoft.autoupdate2" 2>/dev/null || true

# Remove $HOME/Library/Application Scripts/com.microsoft.errorreporting
echo "Removing $HOME/Library/Application Scripts/com.microsoft.errorreporting..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.errorreporting" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.errorreporting" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.errorreporting" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.errorreporting" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.Excel
echo "Removing $HOME/Library/Application Scripts/com.microsoft.Excel..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.Excel" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.Excel" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.Excel" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.Excel" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.Office365ServiceV2
echo "Removing $HOME/Library/Application Scripts/com.microsoft.Office365ServiceV2..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.Office365ServiceV2" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.Office365ServiceV2" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.Office365ServiceV2" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.Office365ServiceV2" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider
echo "Removing $HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync
echo "Removing $HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher
echo "Removing $HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.onenote.mac
echo "Removing $HOME/Library/Application Scripts/com.microsoft.onenote.mac..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.onenote.mac" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.onenote.mac" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.onenote.mac" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.onenote.mac" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.onenote.mac.shareextension
echo "Removing $HOME/Library/Application Scripts/com.microsoft.onenote.mac.shareextension..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.onenote.mac.shareextension" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.onenote.mac.shareextension" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.onenote.mac.shareextension" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.onenote.mac.shareextension" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.openxml.excel.app
echo "Removing $HOME/Library/Application Scripts/com.microsoft.openxml.excel.app..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.openxml.excel.app" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.openxml.excel.app" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.openxml.excel.app" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.openxml.excel.app" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.Outlook
echo "Removing $HOME/Library/Application Scripts/com.microsoft.Outlook..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.Outlook" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.Outlook" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.Outlook" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.Outlook" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.outlook.profilemanager
echo "Removing $HOME/Library/Application Scripts/com.microsoft.outlook.profilemanager..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.outlook.profilemanager" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.outlook.profilemanager" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.outlook.profilemanager" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.outlook.profilemanager" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.Powerpoint
echo "Removing $HOME/Library/Application Scripts/com.microsoft.Powerpoint..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.Powerpoint" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.Powerpoint" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.Powerpoint" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.Powerpoint" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.Word
echo "Removing $HOME/Library/Application Scripts/com.microsoft.Word..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.Word" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.Word" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.Word" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.Word" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.excel.sfl*
echo "Removing $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.excel.sfl*..."
if [ -d "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.excel.sfl*" ]; then
    rm -rf "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.excel.sfl*" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.excel.sfl*" ]; then
    rm -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.excel.sfl*" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.powerpoint.sfl*
echo "Removing $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.powerpoint.sfl*..."
if [ -d "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.powerpoint.sfl*" ]; then
    rm -rf "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.powerpoint.sfl*" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.powerpoint.sfl*" ]; then
    rm -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.powerpoint.sfl*" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.word.sfl*
echo "Removing $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.word.sfl*..."
if [ -d "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.word.sfl*" ]; then
    rm -rf "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.word.sfl*" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.word.sfl*" ]; then
    rm -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.microsoft.word.sfl*" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/CrashReporter/Microsoft Error Reporting_*.plist
echo "Removing $HOME/Library/Application Support/CrashReporter/Microsoft Error Reporting_*.plist..."
if [ -d "$HOME/Library/Application Support/CrashReporter/Microsoft Error Reporting_*.plist" ]; then
    rm -rf "$HOME/Library/Application Support/CrashReporter/Microsoft Error Reporting_*.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/CrashReporter/Microsoft Error Reporting_*.plist" ]; then
    rm -f "$HOME/Library/Application Support/CrashReporter/Microsoft Error Reporting_*.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Microsoft Update Assistant
echo "Removing $HOME/Library/Application Support/Microsoft Update Assistant..."
if [ -d "$HOME/Library/Application Support/Microsoft Update Assistant" ]; then
    rm -rf "$HOME/Library/Application Support/Microsoft Update Assistant" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Microsoft Update Assistant" ]; then
    rm -f "$HOME/Library/Application Support/Microsoft Update Assistant" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater
echo "Removing $HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater..."
if [ -d "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -rf "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -f "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveStandaloneUpdater
echo "Removing $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveStandaloneUpdater..."
if [ -d "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -rf "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.com.microsoft.RMS-XPCService
echo "Removing $HOME/Library/Containers/com.microsoft.com.microsoft.RMS-XPCService..."
if [ -d "$HOME/Library/Containers/com.microsoft.com.microsoft.RMS-XPCService" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.com.microsoft.RMS-XPCService" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.com.microsoft.RMS-XPCService" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.com.microsoft.RMS-XPCService" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.errorreporting
echo "Removing $HOME/Library/Containers/com.microsoft.errorreporting..."
if [ -d "$HOME/Library/Containers/com.microsoft.errorreporting" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.errorreporting" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.errorreporting" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.errorreporting" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.Excel
echo "Removing $HOME/Library/Containers/com.microsoft.Excel..."
if [ -d "$HOME/Library/Containers/com.microsoft.Excel" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.Excel" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.Excel" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.Excel" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.netlib.shipassertprocess
echo "Removing $HOME/Library/Containers/com.microsoft.netlib.shipassertprocess..."
if [ -d "$HOME/Library/Containers/com.microsoft.netlib.shipassertprocess" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.netlib.shipassertprocess" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.netlib.shipassertprocess" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.netlib.shipassertprocess" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.Office365ServiceV2
echo "Removing $HOME/Library/Containers/com.microsoft.Office365ServiceV2..."
if [ -d "$HOME/Library/Containers/com.microsoft.Office365ServiceV2" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.Office365ServiceV2" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.Office365ServiceV2" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.Office365ServiceV2" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.onenote.mac
echo "Removing $HOME/Library/Containers/com.microsoft.onenote.mac..."
if [ -d "$HOME/Library/Containers/com.microsoft.onenote.mac" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.onenote.mac" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.onenote.mac" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.onenote.mac" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.onenote.mac.shareextension
echo "Removing $HOME/Library/Containers/com.microsoft.onenote.mac.shareextension..."
if [ -d "$HOME/Library/Containers/com.microsoft.onenote.mac.shareextension" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.onenote.mac.shareextension" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.onenote.mac.shareextension" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.onenote.mac.shareextension" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.openxml.excel.app
echo "Removing $HOME/Library/Containers/com.microsoft.openxml.excel.app..."
if [ -d "$HOME/Library/Containers/com.microsoft.openxml.excel.app" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.openxml.excel.app" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.openxml.excel.app" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.openxml.excel.app" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.Outlook
echo "Removing $HOME/Library/Containers/com.microsoft.Outlook..."
if [ -d "$HOME/Library/Containers/com.microsoft.Outlook" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.Outlook" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.Outlook" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.Outlook" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.outlook.profilemanager
echo "Removing $HOME/Library/Containers/com.microsoft.outlook.profilemanager..."
if [ -d "$HOME/Library/Containers/com.microsoft.outlook.profilemanager" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.outlook.profilemanager" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.outlook.profilemanager" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.outlook.profilemanager" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.Powerpoint
echo "Removing $HOME/Library/Containers/com.microsoft.Powerpoint..."
if [ -d "$HOME/Library/Containers/com.microsoft.Powerpoint" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.Powerpoint" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.Powerpoint" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.Powerpoint" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.Word
echo "Removing $HOME/Library/Containers/com.microsoft.Word..."
if [ -d "$HOME/Library/Containers/com.microsoft.Word" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.Word" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.Word" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.Word" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/UBF8T346G9.ms
echo "Removing $HOME/Library/Group Containers/UBF8T346G9.ms..."
if [ -d "$HOME/Library/Group Containers/UBF8T346G9.ms" ]; then
    rm -rf "$HOME/Library/Group Containers/UBF8T346G9.ms" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/UBF8T346G9.ms" ]; then
    rm -f "$HOME/Library/Group Containers/UBF8T346G9.ms" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/UBF8T346G9.Office
echo "Removing $HOME/Library/Group Containers/UBF8T346G9.Office..."
if [ -d "$HOME/Library/Group Containers/UBF8T346G9.Office" ]; then
    rm -rf "$HOME/Library/Group Containers/UBF8T346G9.Office" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/UBF8T346G9.Office" ]; then
    rm -f "$HOME/Library/Group Containers/UBF8T346G9.Office" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/UBF8T346G9.OfficeOneDriveSyncIntegration
echo "Removing $HOME/Library/Group Containers/UBF8T346G9.OfficeOneDriveSyncIntegration..."
if [ -d "$HOME/Library/Group Containers/UBF8T346G9.OfficeOneDriveSyncIntegration" ]; then
    rm -rf "$HOME/Library/Group Containers/UBF8T346G9.OfficeOneDriveSyncIntegration" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/UBF8T346G9.OfficeOneDriveSyncIntegration" ]; then
    rm -f "$HOME/Library/Group Containers/UBF8T346G9.OfficeOneDriveSyncIntegration" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/UBF8T346G9.OfficeOsfWebHost
echo "Removing $HOME/Library/Group Containers/UBF8T346G9.OfficeOsfWebHost..."
if [ -d "$HOME/Library/Group Containers/UBF8T346G9.OfficeOsfWebHost" ]; then
    rm -rf "$HOME/Library/Group Containers/UBF8T346G9.OfficeOsfWebHost" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/UBF8T346G9.OfficeOsfWebHost" ]; then
    rm -f "$HOME/Library/Group Containers/UBF8T346G9.OfficeOsfWebHost" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater
echo "Removing $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater..."
if [ -d "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies
echo "Removing $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies..."
if [ -d "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.microsoft.Excel.plist
echo "Removing $HOME/Library/Preferences/com.microsoft.Excel.plist..."
if [ -d "$HOME/Library/Preferences/com.microsoft.Excel.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.microsoft.Excel.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.microsoft.Excel.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.microsoft.Excel.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.microsoft.Outlook.plist
echo "Removing $HOME/Library/Preferences/com.microsoft.Outlook.plist..."
if [ -d "$HOME/Library/Preferences/com.microsoft.Outlook.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.microsoft.Outlook.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.microsoft.Outlook.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.microsoft.Outlook.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.microsoft.Powerpoint.plist
echo "Removing $HOME/Library/Preferences/com.microsoft.Powerpoint.plist..."
if [ -d "$HOME/Library/Preferences/com.microsoft.Powerpoint.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.microsoft.Powerpoint.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.microsoft.Powerpoint.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.microsoft.Powerpoint.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.microsoft.Word.plist
echo "Removing $HOME/Library/Preferences/com.microsoft.Word.plist..."
if [ -d "$HOME/Library/Preferences/com.microsoft.Word.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.microsoft.Word.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.microsoft.Word.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.microsoft.Word.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/com.microsoft.office.setupassistant.savedState
echo "Removing $HOME/Library/Saved Application State/com.microsoft.office.setupassistant.savedState..."
if [ -d "$HOME/Library/Saved Application State/com.microsoft.office.setupassistant.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/com.microsoft.office.setupassistant.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/com.microsoft.office.setupassistant.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/com.microsoft.office.setupassistant.savedState" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/com.microsoft.Word.savedState
echo "Removing $HOME/Library/Saved Application State/com.microsoft.Word.savedState..."
if [ -d "$HOME/Library/Saved Application State/com.microsoft.Word.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/com.microsoft.Word.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/com.microsoft.Word.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/com.microsoft.Word.savedState" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
