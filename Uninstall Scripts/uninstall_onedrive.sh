#!/bin/bash
# Uninstall script for OneDrive
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling OneDrive..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping OneDrive if running..."
pkill -f "OneDrive" 2>/dev/null || true

# Unload service com.microsoft.OneDriveStandaloneUpdater
echo "Unloading service com.microsoft.OneDriveStandaloneUpdater..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdater.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.OneDriveStandaloneUpdater.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdater.plist 2>/dev/null || true

# Unload service com.microsoft.OneDriveStandaloneUpdaterDaemon
echo "Unloading service com.microsoft.OneDriveStandaloneUpdaterDaemon..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.OneDriveStandaloneUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.OneDriveStandaloneUpdaterDaemon.plist 2>/dev/null || true

# Unload service com.microsoft.OneDriveUpdaterDaemon
echo "Unloading service com.microsoft.OneDriveUpdaterDaemon..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.OneDriveUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.OneDriveUpdaterDaemon.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.OneDriveUpdaterDaemon.plist 2>/dev/null || true

# Unload service com.microsoft.SyncReporter
echo "Unloading service com.microsoft.SyncReporter..."
launchctl unload -w /Library/LaunchAgents/com.microsoft.SyncReporter.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.microsoft.SyncReporter.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.microsoft.SyncReporter.plist 2>/dev/null || true

# Kill application with bundle ID com.microsoft.OneDrive if running
echo "Stopping application with bundle ID com.microsoft.OneDrive if running..."
killall -9 "com.microsoft.OneDrive" 2>/dev/null || true

# Kill application with bundle ID com.microsoft.OneDrive.FinderSync if running
echo "Stopping application with bundle ID com.microsoft.OneDrive.FinderSync if running..."
killall -9 "com.microsoft.OneDrive.FinderSync" 2>/dev/null || true

# Kill application with bundle ID com.microsoft.OneDriveUpdater if running
echo "Stopping application with bundle ID com.microsoft.OneDriveUpdater if running..."
killall -9 "com.microsoft.OneDriveUpdater" 2>/dev/null || true

# Remove $HOME/Library/Application Scripts/*.OfficeOneDriveSyncIntegration
echo "Removing $HOME/Library/Application Scripts/*.OfficeOneDriveSyncIntegration..."
if [ -d "$HOME/Library/Application Scripts/*.OfficeOneDriveSyncIntegration" ]; then
    rm -rf "$HOME/Library/Application Scripts/*.OfficeOneDriveSyncIntegration" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/*.OfficeOneDriveSyncIntegration" ]; then
    rm -f "$HOME/Library/Application Scripts/*.OfficeOneDriveSyncIntegration" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/*.OneDriveStandaloneSuite
echo "Removing $HOME/Library/Application Scripts/*.OneDriveStandaloneSuite..."
if [ -d "$HOME/Library/Application Scripts/*.OneDriveStandaloneSuite" ]; then
    rm -rf "$HOME/Library/Application Scripts/*.OneDriveStandaloneSuite" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/*.OneDriveStandaloneSuite" ]; then
    rm -f "$HOME/Library/Application Scripts/*.OneDriveStandaloneSuite" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.OneDrive-mac
echo "Removing $HOME/Library/Application Scripts/com.microsoft.OneDrive-mac..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.OneDrive-mac" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.OneDrive-mac" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive-mac" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive-mac" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider
echo "Removing $HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync
echo "Removing $HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.OneDrive.FinderSync" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher
echo "Removing $HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher..."
if [ -d "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" ]; then
    rm -f "$HOME/Library/Application Scripts/com.microsoft.OneDriveLauncher" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.microsoft.OneDrive
echo "Removing $HOME/Library/Application Support/com.microsoft.OneDrive..."
if [ -d "$HOME/Library/Application Support/com.microsoft.OneDrive" ]; then
    rm -rf "$HOME/Library/Application Support/com.microsoft.OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.microsoft.OneDrive" ]; then
    rm -f "$HOME/Library/Application Support/com.microsoft.OneDrive" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.microsoft.OneDriveUpdater
echo "Removing $HOME/Library/Application Support/com.microsoft.OneDriveUpdater..."
if [ -d "$HOME/Library/Application Support/com.microsoft.OneDriveUpdater" ]; then
    rm -rf "$HOME/Library/Application Support/com.microsoft.OneDriveUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.microsoft.OneDriveUpdater" ]; then
    rm -f "$HOME/Library/Application Support/com.microsoft.OneDriveUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/FileProvider/com.microsoft.OneDrive.FileProvider
echo "Removing $HOME/Library/Application Support/FileProvider/com.microsoft.OneDrive.FileProvider..."
if [ -d "$HOME/Library/Application Support/FileProvider/com.microsoft.OneDrive.FileProvider" ]; then
    rm -rf "$HOME/Library/Application Support/FileProvider/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/FileProvider/com.microsoft.OneDrive.FileProvider" ]; then
    rm -f "$HOME/Library/Application Support/FileProvider/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/OneDrive
echo "Removing $HOME/Library/Application Support/OneDrive..."
if [ -d "$HOME/Library/Application Support/OneDrive" ]; then
    rm -rf "$HOME/Library/Application Support/OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/OneDrive" ]; then
    rm -f "$HOME/Library/Application Support/OneDrive" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/OneDriveUpdater
echo "Removing $HOME/Library/Application Support/OneDriveUpdater..."
if [ -d "$HOME/Library/Application Support/OneDriveUpdater" ]; then
    rm -rf "$HOME/Library/Application Support/OneDriveUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/OneDriveUpdater" ]; then
    rm -f "$HOME/Library/Application Support/OneDriveUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.microsoft.OneDrive
echo "Removing $HOME/Library/Caches/com.microsoft.OneDrive..."
if [ -d "$HOME/Library/Caches/com.microsoft.OneDrive" ]; then
    rm -rf "$HOME/Library/Caches/com.microsoft.OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.microsoft.OneDrive" ]; then
    rm -f "$HOME/Library/Caches/com.microsoft.OneDrive" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater
echo "Removing $HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater..."
if [ -d "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -rf "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -f "$HOME/Library/Caches/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.microsoft.OneDriveUpdater
echo "Removing $HOME/Library/Caches/com.microsoft.OneDriveUpdater..."
if [ -d "$HOME/Library/Caches/com.microsoft.OneDriveUpdater" ]; then
    rm -rf "$HOME/Library/Caches/com.microsoft.OneDriveUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.microsoft.OneDriveUpdater" ]; then
    rm -f "$HOME/Library/Caches/com.microsoft.OneDriveUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDrive
echo "Removing $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDrive..."
if [ -d "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDrive" ]; then
    rm -rf "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDrive" ]; then
    rm -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDrive" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveUpdater
echo "Removing $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveUpdater..."
if [ -d "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveUpdater" ]; then
    rm -rf "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveUpdater" ]; then
    rm -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.microsoft.OneDriveUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/OneDrive
echo "Removing $HOME/Library/Caches/OneDrive..."
if [ -d "$HOME/Library/Caches/OneDrive" ]; then
    rm -rf "$HOME/Library/Caches/OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/OneDrive" ]; then
    rm -f "$HOME/Library/Caches/OneDrive" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.OneDrive.FileProvider
echo "Removing $HOME/Library/Containers/com.microsoft.OneDrive.FileProvider..."
if [ -d "$HOME/Library/Containers/com.microsoft.OneDrive.FileProvider" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.OneDrive.FileProvider" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.OneDrive.FileProvider" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.OneDrive.FinderSync
echo "Removing $HOME/Library/Containers/com.microsoft.OneDrive.FinderSync..."
if [ -d "$HOME/Library/Containers/com.microsoft.OneDrive.FinderSync" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.OneDrive.FinderSync" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.OneDrive.FinderSync" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.OneDrive.FinderSync" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.microsoft.OneDriveLauncher
echo "Removing $HOME/Library/Containers/com.microsoft.OneDriveLauncher..."
if [ -d "$HOME/Library/Containers/com.microsoft.OneDriveLauncher" ]; then
    rm -rf "$HOME/Library/Containers/com.microsoft.OneDriveLauncher" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.microsoft.OneDriveLauncher" ]; then
    rm -f "$HOME/Library/Containers/com.microsoft.OneDriveLauncher" 2>/dev/null || true
fi

# Remove $HOME/Library/Cookies/com.microsoft.OneDrive.binarycookies
echo "Removing $HOME/Library/Cookies/com.microsoft.OneDrive.binarycookies..."
if [ -d "$HOME/Library/Cookies/com.microsoft.OneDrive.binarycookies" ]; then
    rm -rf "$HOME/Library/Cookies/com.microsoft.OneDrive.binarycookies" 2>/dev/null || true
elif [ -f "$HOME/Library/Cookies/com.microsoft.OneDrive.binarycookies" ]; then
    rm -f "$HOME/Library/Cookies/com.microsoft.OneDrive.binarycookies" 2>/dev/null || true
fi

# Remove $HOME/Library/Cookies/com.microsoft.OneDriveUpdater.binarycookies
echo "Removing $HOME/Library/Cookies/com.microsoft.OneDriveUpdater.binarycookies..."
if [ -d "$HOME/Library/Cookies/com.microsoft.OneDriveUpdater.binarycookies" ]; then
    rm -rf "$HOME/Library/Cookies/com.microsoft.OneDriveUpdater.binarycookies" 2>/dev/null || true
elif [ -f "$HOME/Library/Cookies/com.microsoft.OneDriveUpdater.binarycookies" ]; then
    rm -f "$HOME/Library/Cookies/com.microsoft.OneDriveUpdater.binarycookies" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/*.OfficeOneDriveSyncIntegration
echo "Removing $HOME/Library/Group Containers/*.OfficeOneDriveSyncIntegration..."
if [ -d "$HOME/Library/Group Containers/*.OfficeOneDriveSyncIntegration" ]; then
    rm -rf "$HOME/Library/Group Containers/*.OfficeOneDriveSyncIntegration" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/*.OfficeOneDriveSyncIntegration" ]; then
    rm -f "$HOME/Library/Group Containers/*.OfficeOneDriveSyncIntegration" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/*.OneDriveStandaloneSuite
echo "Removing $HOME/Library/Group Containers/*.OneDriveStandaloneSuite..."
if [ -d "$HOME/Library/Group Containers/*.OneDriveStandaloneSuite" ]; then
    rm -rf "$HOME/Library/Group Containers/*.OneDriveStandaloneSuite" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/*.OneDriveStandaloneSuite" ]; then
    rm -f "$HOME/Library/Group Containers/*.OneDriveStandaloneSuite" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/*.OneDriveSyncClientSuite
echo "Removing $HOME/Library/Group Containers/*.OneDriveSyncClientSuite..."
if [ -d "$HOME/Library/Group Containers/*.OneDriveSyncClientSuite" ]; then
    rm -rf "$HOME/Library/Group Containers/*.OneDriveSyncClientSuite" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/*.OneDriveSyncClientSuite" ]; then
    rm -f "$HOME/Library/Group Containers/*.OneDriveSyncClientSuite" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.microsoft.OneDrive
echo "Removing $HOME/Library/HTTPStorages/com.microsoft.OneDrive..."
if [ -d "$HOME/Library/HTTPStorages/com.microsoft.OneDrive" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.microsoft.OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.microsoft.OneDrive" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.microsoft.OneDrive" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.microsoft.OneDrive.binarycookies
echo "Removing $HOME/Library/HTTPStorages/com.microsoft.OneDrive.binarycookies..."
if [ -d "$HOME/Library/HTTPStorages/com.microsoft.OneDrive.binarycookies" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.microsoft.OneDrive.binarycookies" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.microsoft.OneDrive.binarycookies" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.microsoft.OneDrive.binarycookies" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater
echo "Removing $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater..."
if [ -d "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies
echo "Removing $HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies..."
if [ -d "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.microsoft.OneDriveStandaloneUpdater.binarycookies" 2>/dev/null || true
fi

# Remove $HOME/Library/Logs/OneDrive
echo "Removing $HOME/Library/Logs/OneDrive..."
if [ -d "$HOME/Library/Logs/OneDrive" ]; then
    rm -rf "$HOME/Library/Logs/OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/Logs/OneDrive" ]; then
    rm -f "$HOME/Library/Logs/OneDrive" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/*.OneDriveStandaloneSuite.plist
echo "Removing $HOME/Library/Preferences/*.OneDriveStandaloneSuite.plist..."
if [ -d "$HOME/Library/Preferences/*.OneDriveStandaloneSuite.plist" ]; then
    rm -rf "$HOME/Library/Preferences/*.OneDriveStandaloneSuite.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/*.OneDriveStandaloneSuite.plist" ]; then
    rm -f "$HOME/Library/Preferences/*.OneDriveStandaloneSuite.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.microsoft.OneDrive.plist
echo "Removing $HOME/Library/Preferences/com.microsoft.OneDrive.plist..."
if [ -d "$HOME/Library/Preferences/com.microsoft.OneDrive.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.microsoft.OneDrive.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.microsoft.OneDrive.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.microsoft.OneDrive.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.microsoft.OneDriveStandaloneUpdater.plist
echo "Removing $HOME/Library/Preferences/com.microsoft.OneDriveStandaloneUpdater.plist..."
if [ -d "$HOME/Library/Preferences/com.microsoft.OneDriveStandaloneUpdater.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.microsoft.OneDriveStandaloneUpdater.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.microsoft.OneDriveStandaloneUpdater.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.microsoft.OneDriveStandaloneUpdater.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.microsoft.OneDriveUpdater.plist
echo "Removing $HOME/Library/Preferences/com.microsoft.OneDriveUpdater.plist..."
if [ -d "$HOME/Library/Preferences/com.microsoft.OneDriveUpdater.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.microsoft.OneDriveUpdater.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.microsoft.OneDriveUpdater.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.microsoft.OneDriveUpdater.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/WebKit/com.microsoft.OneDrive
echo "Removing $HOME/Library/WebKit/com.microsoft.OneDrive..."
if [ -d "$HOME/Library/WebKit/com.microsoft.OneDrive" ]; then
    rm -rf "$HOME/Library/WebKit/com.microsoft.OneDrive" 2>/dev/null || true
elif [ -f "$HOME/Library/WebKit/com.microsoft.OneDrive" ]; then
    rm -f "$HOME/Library/WebKit/com.microsoft.OneDrive" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
