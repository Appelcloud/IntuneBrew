#!/bin/bash
# Uninstall script for Vivaldi
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling Vivaldi..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping Vivaldi if running..."
pkill -f "Vivaldi" 2>/dev/null || true

# Kill application with bundle ID com.vivaldi.Vivaldi if running
echo "Stopping application with bundle ID com.vivaldi.Vivaldi if running..."
killall -9 "com.vivaldi.Vivaldi" 2>/dev/null || true

# Remove /Applications/Vivaldi.app
echo "Removing /Applications/Vivaldi.app..."
if [ -d "/Applications/Vivaldi.app" ]; then
    rm -rf "/Applications/Vivaldi.app" 2>/dev/null || true
elif [ -f "/Applications/Vivaldi.app" ]; then
    rm -f "/Applications/Vivaldi.app" 2>/dev/null || true
fi

# Remove /Library/Logs/DiagnosticReports/Vivaldi Helper (Renderer)_*.diag
echo "Removing /Library/Logs/DiagnosticReports/Vivaldi Helper (Renderer)_*.diag..."
if [ -d "/Library/Logs/DiagnosticReports/Vivaldi Helper (Renderer)_*.diag" ]; then
    rm -rf "/Library/Logs/DiagnosticReports/Vivaldi Helper (Renderer)_*.diag" 2>/dev/null || true
elif [ -f "/Library/Logs/DiagnosticReports/Vivaldi Helper (Renderer)_*.diag" ]; then
    rm -f "/Library/Logs/DiagnosticReports/Vivaldi Helper (Renderer)_*.diag" 2>/dev/null || true
fi

# Remove /Library/Logs/DiagnosticReports/Vivaldi_*.diag
echo "Removing /Library/Logs/DiagnosticReports/Vivaldi_*.diag..."
if [ -d "/Library/Logs/DiagnosticReports/Vivaldi_*.diag" ]; then
    rm -rf "/Library/Logs/DiagnosticReports/Vivaldi_*.diag" 2>/dev/null || true
elif [ -f "/Library/Logs/DiagnosticReports/Vivaldi_*.diag" ]; then
    rm -f "/Library/Logs/DiagnosticReports/Vivaldi_*.diag" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/CrashReporter/Vivaldi_*.plist
echo "Removing $HOME/Library/Application Support/CrashReporter/Vivaldi_*.plist..."
if [ -d "$HOME/Library/Application Support/CrashReporter/Vivaldi_*.plist" ]; then
    rm -rf "$HOME/Library/Application Support/CrashReporter/Vivaldi_*.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/CrashReporter/Vivaldi_*.plist" ]; then
    rm -f "$HOME/Library/Application Support/CrashReporter/Vivaldi_*.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Vivaldi
echo "Removing $HOME/Library/Application Support/Vivaldi..."
if [ -d "$HOME/Library/Application Support/Vivaldi" ]; then
    rm -rf "$HOME/Library/Application Support/Vivaldi" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Vivaldi" ]; then
    rm -f "$HOME/Library/Application Support/Vivaldi" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.vivaldi.Vivaldi
echo "Removing $HOME/Library/Caches/com.vivaldi.Vivaldi..."
if [ -d "$HOME/Library/Caches/com.vivaldi.Vivaldi" ]; then
    rm -rf "$HOME/Library/Caches/com.vivaldi.Vivaldi" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.vivaldi.Vivaldi" ]; then
    rm -f "$HOME/Library/Caches/com.vivaldi.Vivaldi" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/Vivaldi
echo "Removing $HOME/Library/Caches/Vivaldi..."
if [ -d "$HOME/Library/Caches/Vivaldi" ]; then
    rm -rf "$HOME/Library/Caches/Vivaldi" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/Vivaldi" ]; then
    rm -f "$HOME/Library/Caches/Vivaldi" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.vivaldi.Vivaldi
echo "Removing $HOME/Library/HTTPStorages/com.vivaldi.Vivaldi..."
if [ -d "$HOME/Library/HTTPStorages/com.vivaldi.Vivaldi" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.vivaldi.Vivaldi" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.vivaldi.Vivaldi" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.vivaldi.Vivaldi" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.vivaldi.Vivaldi.plist
echo "Removing $HOME/Library/Preferences/com.vivaldi.Vivaldi.plist..."
if [ -d "$HOME/Library/Preferences/com.vivaldi.Vivaldi.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.vivaldi.Vivaldi.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.vivaldi.Vivaldi.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.vivaldi.Vivaldi.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/com.vivaldi.Vivaldi.savedState
echo "Removing $HOME/Library/Saved Application State/com.vivaldi.Vivaldi.savedState..."
if [ -d "$HOME/Library/Saved Application State/com.vivaldi.Vivaldi.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/com.vivaldi.Vivaldi.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/com.vivaldi.Vivaldi.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/com.vivaldi.Vivaldi.savedState" 2>/dev/null || true
fi

# Remove $HOME/Library/WebKit/com.vivaldi.Vivaldi
echo "Removing $HOME/Library/WebKit/com.vivaldi.Vivaldi..."
if [ -d "$HOME/Library/WebKit/com.vivaldi.Vivaldi" ]; then
    rm -rf "$HOME/Library/WebKit/com.vivaldi.Vivaldi" 2>/dev/null || true
elif [ -f "$HOME/Library/WebKit/com.vivaldi.Vivaldi" ]; then
    rm -f "$HOME/Library/WebKit/com.vivaldi.Vivaldi" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
