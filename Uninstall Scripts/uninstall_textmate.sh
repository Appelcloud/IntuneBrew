#!/bin/bash
# Uninstall script for TextMate
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling TextMate..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping TextMate if running..."
pkill -f "TextMate" 2>/dev/null || true

# Kill application with bundle ID com.macromates.TextMate if running
echo "Stopping application with bundle ID com.macromates.TextMate if running..."
killall -9 "com.macromates.TextMate" 2>/dev/null || true

# Remove /Applications/TextMate.app
echo "Removing /Applications/TextMate.app..."
if [ -d "/Applications/TextMate.app" ]; then
    rm -rf "/Applications/TextMate.app" 2>/dev/null || true
elif [ -f "/Applications/TextMate.app" ]; then
    rm -f "/Applications/TextMate.app" 2>/dev/null || true
fi

# Remove binary /Applications/TextMate.app/TextMate.app/Contents/MacOS/mate
echo "Removing binary /Applications/TextMate.app/TextMate.app/Contents/MacOS/mate..."
if [ -f "/Applications/TextMate.app/TextMate.app/Contents/MacOS/mate" ]; then
    rm -f "/Applications/TextMate.app/TextMate.app/Contents/MacOS/mate" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.macromates.textmate.sfl*
echo "Removing $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.macromates.textmate.sfl*..."
if [ -d "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.macromates.textmate.sfl*" ]; then
    rm -rf "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.macromates.textmate.sfl*" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.macromates.textmate.sfl*" ]; then
    rm -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.macromates.textmate.sfl*" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/TextMate
echo "Removing $HOME/Library/Application Support/TextMate..."
if [ -d "$HOME/Library/Application Support/TextMate" ]; then
    rm -rf "$HOME/Library/Application Support/TextMate" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/TextMate" ]; then
    rm -f "$HOME/Library/Application Support/TextMate" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.apple.helpd/Generated/TextMate 2 Help*
echo "Removing $HOME/Library/Caches/com.apple.helpd/Generated/TextMate 2 Help*..."
if [ -d "$HOME/Library/Caches/com.apple.helpd/Generated/TextMate 2 Help*" ]; then
    rm -rf "$HOME/Library/Caches/com.apple.helpd/Generated/TextMate 2 Help*" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.apple.helpd/Generated/TextMate 2 Help*" ]; then
    rm -f "$HOME/Library/Caches/com.apple.helpd/Generated/TextMate 2 Help*" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.macromates.TextMate
echo "Removing $HOME/Library/Caches/com.macromates.TextMate..."
if [ -d "$HOME/Library/Caches/com.macromates.TextMate" ]; then
    rm -rf "$HOME/Library/Caches/com.macromates.TextMate" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.macromates.TextMate" ]; then
    rm -f "$HOME/Library/Caches/com.macromates.TextMate" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.macromates.TextMate.plist
echo "Removing $HOME/Library/Preferences/com.macromates.TextMate.plist..."
if [ -d "$HOME/Library/Preferences/com.macromates.TextMate.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.macromates.TextMate.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.macromates.TextMate.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.macromates.TextMate.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.macromates.TextMate.preview.plist
echo "Removing $HOME/Library/Preferences/com.macromates.TextMate.preview.plist..."
if [ -d "$HOME/Library/Preferences/com.macromates.TextMate.preview.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.macromates.TextMate.preview.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.macromates.TextMate.preview.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.macromates.TextMate.preview.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/com.macromates.TextMate.savedState
echo "Removing $HOME/Library/Saved Application State/com.macromates.TextMate.savedState..."
if [ -d "$HOME/Library/Saved Application State/com.macromates.TextMate.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/com.macromates.TextMate.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/com.macromates.TextMate.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/com.macromates.TextMate.savedState" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
