#!/bin/bash
# Uninstall script for 1Password
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling 1Password..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
    echo "Please run as root"
    exit 1
fi

# Kill application process if running
echo "Stopping 1Password if running..."
pkill -f "1Password" 2>/dev/null || true

# Remove /Applications/1Password.app
echo "Removing /Applications/1Password.app..."
if [ -d "/Applications/1Password.app" ]; then
    rm -rf "/Applications/1Password.app" 2>/dev/null || true
elif [ -f "/Applications/1Password.app" ]; then
    rm -f "/Applications/1Password.app" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/2BUA8C4S2C.com.1password*
echo "Removing $HOME/Library/Application Scripts/2BUA8C4S2C.com.1password*..."
if [ -d "$HOME/Library/Application Scripts/2BUA8C4S2C.com.1password*" ]; then
    rm -rf "$HOME/Library/Application Scripts/2BUA8C4S2C.com.1password*" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/2BUA8C4S2C.com.1password*" ]; then
    rm -f "$HOME/Library/Application Scripts/2BUA8C4S2C.com.1password*" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/2BUA8C4S2C.com.agilebits
echo "Removing $HOME/Library/Application Scripts/2BUA8C4S2C.com.agilebits..."
if [ -d "$HOME/Library/Application Scripts/2BUA8C4S2C.com.agilebits" ]; then
    rm -rf "$HOME/Library/Application Scripts/2BUA8C4S2C.com.agilebits" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/2BUA8C4S2C.com.agilebits" ]; then
    rm -f "$HOME/Library/Application Scripts/2BUA8C4S2C.com.agilebits" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.1password.1password-launcher
echo "Removing $HOME/Library/Application Scripts/com.1password.1password-launcher..."
if [ -d "$HOME/Library/Application Scripts/com.1password.1password-launcher" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.1password.1password-launcher" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.1password.1password-launcher" ]; then
    rm -f "$HOME/Library/Application Scripts/com.1password.1password-launcher" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.1password.browser-support
echo "Removing $HOME/Library/Application Scripts/com.1password.browser-support..."
if [ -d "$HOME/Library/Application Scripts/com.1password.browser-support" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.1password.browser-support" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.1password.browser-support" ]; then
    rm -f "$HOME/Library/Application Scripts/com.1password.browser-support" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/1Password
echo "Removing $HOME/Library/Application Support/1Password..."
if [ -d "$HOME/Library/Application Support/1Password" ]; then
    rm -rf "$HOME/Library/Application Support/1Password" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/1Password" ]; then
    rm -f "$HOME/Library/Application Support/1Password" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Arc/User Data/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Arc/User Data/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Arc/User Data/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Arc/User Data/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Arc/User Data/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Arc/User Data/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.1password.1password.sfl*
echo "Removing $HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.1password.1password.sfl*..."
if [ -d "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.1password.1password.sfl*" ]; then
    rm -rf "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.1password.1password.sfl*" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.1password.1password.sfl*" ]; then
    rm -f "$HOME/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.1password.1password.sfl*" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/CrashReporter/1Password*
echo "Removing $HOME/Library/Application Support/CrashReporter/1Password*..."
if [ -d "$HOME/Library/Application Support/CrashReporter/1Password*" ]; then
    rm -rf "$HOME/Library/Application Support/CrashReporter/1Password*" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/CrashReporter/1Password*" ]; then
    rm -f "$HOME/Library/Application Support/CrashReporter/1Password*" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Google/Chrome Beta/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Google/Chrome Beta/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Google/Chrome Beta/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Google/Chrome Beta/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Google/Chrome Beta/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Google/Chrome Beta/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Google/Chrome Canary/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Google/Chrome Canary/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Google/Chrome Canary/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Google/Chrome Canary/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Google/Chrome Canary/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Google/Chrome Canary/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Google/Chrome Dev/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Google/Chrome Dev/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Google/Chrome Dev/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Google/Chrome Dev/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Google/Chrome Dev/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Google/Chrome Dev/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Google/Chrome/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Google/Chrome/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Google/Chrome/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Google/Chrome/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Google/Chrome/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Google/Chrome/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Microsoft Edge Beta/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Microsoft Edge Beta/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Microsoft Edge Beta/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Microsoft Edge Beta/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Microsoft Edge Beta/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Microsoft Edge Beta/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Microsoft Edge Canary/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Microsoft Edge Canary/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Microsoft Edge Canary/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Microsoft Edge Canary/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Microsoft Edge Canary/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Microsoft Edge Canary/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Microsoft Edge Dev/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Microsoft Edge Dev/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Microsoft Edge Dev/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Microsoft Edge Dev/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Microsoft Edge Dev/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Microsoft Edge Dev/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Microsoft Edge/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Microsoft Edge/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Microsoft Edge/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Microsoft Edge/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Microsoft Edge/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Microsoft Edge/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Mozilla/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Mozilla/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Mozilla/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Mozilla/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Mozilla/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Mozilla/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Vivaldi/NativeMessagingHosts/com.1password.1password.json
echo "Removing $HOME/Library/Application Support/Vivaldi/NativeMessagingHosts/com.1password.1password.json..."
if [ -d "$HOME/Library/Application Support/Vivaldi/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -rf "$HOME/Library/Application Support/Vivaldi/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Vivaldi/NativeMessagingHosts/com.1password.1password.json" ]; then
    rm -f "$HOME/Library/Application Support/Vivaldi/NativeMessagingHosts/com.1password.1password.json" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/2BUA8C4S2C.com.1password.browser-helper
echo "Removing $HOME/Library/Containers/2BUA8C4S2C.com.1password.browser-helper..."
if [ -d "$HOME/Library/Containers/2BUA8C4S2C.com.1password.browser-helper" ]; then
    rm -rf "$HOME/Library/Containers/2BUA8C4S2C.com.1password.browser-helper" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/2BUA8C4S2C.com.1password.browser-helper" ]; then
    rm -f "$HOME/Library/Containers/2BUA8C4S2C.com.1password.browser-helper" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.1password.1password*
echo "Removing $HOME/Library/Containers/com.1password.1password*..."
if [ -d "$HOME/Library/Containers/com.1password.1password*" ]; then
    rm -rf "$HOME/Library/Containers/com.1password.1password*" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.1password.1password*" ]; then
    rm -f "$HOME/Library/Containers/com.1password.1password*" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.1password.browser-support
echo "Removing $HOME/Library/Containers/com.1password.browser-support..."
if [ -d "$HOME/Library/Containers/com.1password.browser-support" ]; then
    rm -rf "$HOME/Library/Containers/com.1password.browser-support" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.1password.browser-support" ]; then
    rm -f "$HOME/Library/Containers/com.1password.browser-support" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/2BUA8C4S2C.com.1password
echo "Removing $HOME/Library/Group Containers/2BUA8C4S2C.com.1password..."
if [ -d "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password" ]; then
    rm -rf "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password" ]; then
    rm -f "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/2BUA8C4S2C.com.agilebits
echo "Removing $HOME/Library/Group Containers/2BUA8C4S2C.com.agilebits..."
if [ -d "$HOME/Library/Group Containers/2BUA8C4S2C.com.agilebits" ]; then
    rm -rf "$HOME/Library/Group Containers/2BUA8C4S2C.com.agilebits" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/2BUA8C4S2C.com.agilebits" ]; then
    rm -f "$HOME/Library/Group Containers/2BUA8C4S2C.com.agilebits" 2>/dev/null || true
fi

# Remove $HOME/Library/Logs/1Password
echo "Removing $HOME/Library/Logs/1Password..."
if [ -d "$HOME/Library/Logs/1Password" ]; then
    rm -rf "$HOME/Library/Logs/1Password" 2>/dev/null || true
elif [ -f "$HOME/Library/Logs/1Password" ]; then
    rm -f "$HOME/Library/Logs/1Password" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.1password.1password.plist
echo "Removing $HOME/Library/Preferences/com.1password.1password.plist..."
if [ -d "$HOME/Library/Preferences/com.1password.1password.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.1password.1password.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.1password.1password.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.1password.1password.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/group.com.1password.plist
echo "Removing $HOME/Library/Preferences/group.com.1password.plist..."
if [ -d "$HOME/Library/Preferences/group.com.1password.plist" ]; then
    rm -rf "$HOME/Library/Preferences/group.com.1password.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/group.com.1password.plist" ]; then
    rm -f "$HOME/Library/Preferences/group.com.1password.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/com.1password.1password.savedState
echo "Removing $HOME/Library/Saved Application State/com.1password.1password.savedState..."
if [ -d "$HOME/Library/Saved Application State/com.1password.1password.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/com.1password.1password.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/com.1password.1password.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/com.1password.1password.savedState" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
