#!/bin/bash
# Uninstall script for Wireshark
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling Wireshark..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping Wireshark if running..."
pkill -f "Wireshark" 2>/dev/null || true

# Unload service org.wireshark.ChmodBPF
echo "Unloading service org.wireshark.ChmodBPF..."
launchctl unload -w /Library/LaunchAgents/org.wireshark.ChmodBPF.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/org.wireshark.ChmodBPF.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/org.wireshark.ChmodBPF.plist 2>/dev/null || true

# Remove /Applications/Wireshark.app
echo "Removing /Applications/Wireshark.app..."
if [ -d "/Applications/Wireshark.app" ]; then
    rm -rf "/Applications/Wireshark.app" 2>/dev/null || true
elif [ -f "/Applications/Wireshark.app" ]; then
    rm -f "/Applications/Wireshark.app" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dumpcap
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dumpcap..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dumpcap" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dumpcap" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/editcap
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/editcap..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/editcap" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/editcap" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/androiddump
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/androiddump..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/androiddump" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/androiddump" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/ciscodump
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/ciscodump..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/ciscodump" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/ciscodump" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/randpktdump
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/randpktdump..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/randpktdump" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/randpktdump" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/sshdump
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/sshdump..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/sshdump" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/sshdump" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/udpdump
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/udpdump..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/udpdump" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/udpdump" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/wifidump
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/wifidump..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/wifidump" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/extcap/wifidump" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/idl2wrs
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/idl2wrs..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/idl2wrs" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/idl2wrs" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mergecap
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mergecap..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mergecap" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mergecap" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mmdbresolve
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mmdbresolve..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mmdbresolve" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/mmdbresolve" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/randpkt
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/randpkt..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/randpkt" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/randpkt" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/rawshark
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/rawshark..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/rawshark" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/rawshark" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/reordercap
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/reordercap..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/reordercap" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/reordercap" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/sharkd
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/sharkd..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/sharkd" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/sharkd" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/capinfos
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/capinfos..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/capinfos" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/capinfos" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/text2pcap
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/text2pcap..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/text2pcap" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/text2pcap" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/tshark
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/tshark..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/tshark" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/tshark" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dftest
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dftest..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dftest" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/dftest" 2>/dev/null || true
fi

# Remove binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/captype
echo "Removing binary /Applications/Wireshark.app/Wireshark.app/Contents/MacOS/captype..."
if [ -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/captype" ]; then
    rm -f "/Applications/Wireshark.app/Wireshark.app/Contents/MacOS/captype" 2>/dev/null || true
fi

# Remove /Library/Application Support/Wireshark
echo "Removing /Library/Application Support/Wireshark..."
if [ -d "/Library/Application Support/Wireshark" ]; then
    rm -rf "/Library/Application Support/Wireshark" 2>/dev/null || true
elif [ -f "/Library/Application Support/Wireshark" ]; then
    rm -f "/Library/Application Support/Wireshark" 2>/dev/null || true
fi

# Remove $HOME/.config/wireshark
echo "Removing $HOME/.config/wireshark..."
if [ -d "$HOME/.config/wireshark" ]; then
    rm -rf "$HOME/.config/wireshark" 2>/dev/null || true
elif [ -f "$HOME/.config/wireshark" ]; then
    rm -f "$HOME/.config/wireshark" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/org.wireshark.Wireshark
echo "Removing $HOME/Library/Caches/org.wireshark.Wireshark..."
if [ -d "$HOME/Library/Caches/org.wireshark.Wireshark" ]; then
    rm -rf "$HOME/Library/Caches/org.wireshark.Wireshark" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/org.wireshark.Wireshark" ]; then
    rm -f "$HOME/Library/Caches/org.wireshark.Wireshark" 2>/dev/null || true
fi

# Remove $HOME/Library/Cookies/org.wireshark.Wireshark.binarycookies
echo "Removing $HOME/Library/Cookies/org.wireshark.Wireshark.binarycookies..."
if [ -d "$HOME/Library/Cookies/org.wireshark.Wireshark.binarycookies" ]; then
    rm -rf "$HOME/Library/Cookies/org.wireshark.Wireshark.binarycookies" 2>/dev/null || true
elif [ -f "$HOME/Library/Cookies/org.wireshark.Wireshark.binarycookies" ]; then
    rm -f "$HOME/Library/Cookies/org.wireshark.Wireshark.binarycookies" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/org.wireshark.Wireshark
echo "Removing $HOME/Library/HTTPStorages/org.wireshark.Wireshark..."
if [ -d "$HOME/Library/HTTPStorages/org.wireshark.Wireshark" ]; then
    rm -rf "$HOME/Library/HTTPStorages/org.wireshark.Wireshark" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/org.wireshark.Wireshark" ]; then
    rm -f "$HOME/Library/HTTPStorages/org.wireshark.Wireshark" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/org.wireshark.Wireshark.binarycookies
echo "Removing $HOME/Library/HTTPStorages/org.wireshark.Wireshark.binarycookies..."
if [ -d "$HOME/Library/HTTPStorages/org.wireshark.Wireshark.binarycookies" ]; then
    rm -rf "$HOME/Library/HTTPStorages/org.wireshark.Wireshark.binarycookies" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/org.wireshark.Wireshark.binarycookies" ]; then
    rm -f "$HOME/Library/HTTPStorages/org.wireshark.Wireshark.binarycookies" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/org.wireshark.Wireshark.plist
echo "Removing $HOME/Library/Preferences/org.wireshark.Wireshark.plist..."
if [ -d "$HOME/Library/Preferences/org.wireshark.Wireshark.plist" ]; then
    rm -rf "$HOME/Library/Preferences/org.wireshark.Wireshark.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/org.wireshark.Wireshark.plist" ]; then
    rm -f "$HOME/Library/Preferences/org.wireshark.Wireshark.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/org.wireshark.Wireshark.savedState
echo "Removing $HOME/Library/Saved Application State/org.wireshark.Wireshark.savedState..."
if [ -d "$HOME/Library/Saved Application State/org.wireshark.Wireshark.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/org.wireshark.Wireshark.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/org.wireshark.Wireshark.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/org.wireshark.Wireshark.savedState" 2>/dev/null || true
fi

# Remove $HOME/Library/WebKit/org.wireshark.Wireshark
echo "Removing $HOME/Library/WebKit/org.wireshark.Wireshark..."
if [ -d "$HOME/Library/WebKit/org.wireshark.Wireshark" ]; then
    rm -rf "$HOME/Library/WebKit/org.wireshark.Wireshark" 2>/dev/null || true
elif [ -f "$HOME/Library/WebKit/org.wireshark.Wireshark" ]; then
    rm -f "$HOME/Library/WebKit/org.wireshark.Wireshark" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
