#!/bin/bash
# Uninstall script for FSMonitor
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling FSMonitor..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping FSMonitor if running..."
pkill -f "FSMonitor" 2>/dev/null || true

# Unload service com.tristan.fseventstool
echo "Unloading service com.tristan.fseventstool..."
launchctl unload -w /Library/LaunchAgents/com.tristan.fseventstool.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.tristan.fseventstool.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.tristan.fseventstool.plist 2>/dev/null || true

# Remove /Applications/FSMonitor.app
echo "Removing /Applications/FSMonitor.app..."
if [ -d "/Applications/FSMonitor.app" ]; then
    rm -rf "/Applications/FSMonitor.app" 2>/dev/null || true
elif [ -f "/Applications/FSMonitor.app" ]; then
    rm -f "/Applications/FSMonitor.app" 2>/dev/null || true
fi

# Remove /Users/Shared/FSMonitor
echo "Removing /Users/Shared/FSMonitor..."
if [ -d "/Users/Shared/FSMonitor" ]; then
    rm -rf "/Users/Shared/FSMonitor" 2>/dev/null || true
elif [ -f "/Users/Shared/FSMonitor" ]; then
    rm -f "/Users/Shared/FSMonitor" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.tristan.FSMonitor
echo "Removing $HOME/Library/Application Support/com.tristan.FSMonitor..."
if [ -d "$HOME/Library/Application Support/com.tristan.FSMonitor" ]; then
    rm -rf "$HOME/Library/Application Support/com.tristan.FSMonitor" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.tristan.FSMonitor" ]; then
    rm -f "$HOME/Library/Application Support/com.tristan.FSMonitor" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/FSMonitor
echo "Removing $HOME/Library/Application Support/FSMonitor..."
if [ -d "$HOME/Library/Application Support/FSMonitor" ]; then
    rm -rf "$HOME/Library/Application Support/FSMonitor" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/FSMonitor" ]; then
    rm -f "$HOME/Library/Application Support/FSMonitor" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.tristan.FSMonitor
echo "Removing $HOME/Library/Caches/com.tristan.FSMonitor..."
if [ -d "$HOME/Library/Caches/com.tristan.FSMonitor" ]; then
    rm -rf "$HOME/Library/Caches/com.tristan.FSMonitor" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.tristan.FSMonitor" ]; then
    rm -f "$HOME/Library/Caches/com.tristan.FSMonitor" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.tristan.FSMonitor.plist
echo "Removing $HOME/Library/Preferences/com.tristan.FSMonitor.plist..."
if [ -d "$HOME/Library/Preferences/com.tristan.FSMonitor.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.tristan.FSMonitor.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.tristan.FSMonitor.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.tristan.FSMonitor.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/com.tristan.FSMonitor.savedState
echo "Removing $HOME/Library/Saved Application State/com.tristan.FSMonitor.savedState..."
if [ -d "$HOME/Library/Saved Application State/com.tristan.FSMonitor.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/com.tristan.FSMonitor.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/com.tristan.FSMonitor.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/com.tristan.FSMonitor.savedState" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
