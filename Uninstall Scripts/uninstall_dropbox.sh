#!/bin/bash
# Uninstall script for Dropbox
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling Dropbox..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping Dropbox if running..."
pkill -f "Dropbox" 2>/dev/null || true

# Unload service com.dropbox.DropboxMacUpdate.agent
echo "Unloading service com.dropbox.DropboxMacUpdate.agent..."
launchctl unload -w /Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist 2>/dev/null || true
launchctl unload -w /Library/LaunchDaemons/com.dropbox.DropboxMacUpdate.agent.plist 2>/dev/null || true
launchctl unload -w ~/Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist 2>/dev/null || true

# Remove /Applications/Dropbox.app
echo "Removing /Applications/Dropbox.app..."
if [ -d "/Applications/Dropbox.app" ]; then
    rm -rf "/Applications/Dropbox.app" 2>/dev/null || true
elif [ -f "/Applications/Dropbox.app" ]; then
    rm -f "/Applications/Dropbox.app" 2>/dev/null || true
fi

# Remove $HOME/.dropbox
echo "Removing $HOME/.dropbox..."
if [ -d "$HOME/.dropbox" ]; then
    rm -rf "$HOME/.dropbox" 2>/dev/null || true
elif [ -f "$HOME/.dropbox" ]; then
    rm -f "$HOME/.dropbox" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/*.com.getdropbox.dropbox.sync
echo "Removing $HOME/Library/Application Scripts/*.com.getdropbox.dropbox.sync..."
if [ -d "$HOME/Library/Application Scripts/*.com.getdropbox.dropbox.sync" ]; then
    rm -rf "$HOME/Library/Application Scripts/*.com.getdropbox.dropbox.sync" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/*.com.getdropbox.dropbox.sync" ]; then
    rm -f "$HOME/Library/Application Scripts/*.com.getdropbox.dropbox.sync" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.dropbox.alternatenotificationservice
echo "Removing $HOME/Library/Application Scripts/com.dropbox.alternatenotificationservice..."
if [ -d "$HOME/Library/Application Scripts/com.dropbox.alternatenotificationservice" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.dropbox.alternatenotificationservice" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.dropbox.alternatenotificationservice" ]; then
    rm -f "$HOME/Library/Application Scripts/com.dropbox.alternatenotificationservice" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.dropbox.client.crashpad
echo "Removing $HOME/Library/Application Scripts/com.dropbox.client.crashpad..."
if [ -d "$HOME/Library/Application Scripts/com.dropbox.client.crashpad" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.dropbox.client.crashpad" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.dropbox.client.crashpad" ]; then
    rm -f "$HOME/Library/Application Scripts/com.dropbox.client.crashpad" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.dropbox.foldertagger
echo "Removing $HOME/Library/Application Scripts/com.dropbox.foldertagger..."
if [ -d "$HOME/Library/Application Scripts/com.dropbox.foldertagger" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.dropbox.foldertagger" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.dropbox.foldertagger" ]; then
    rm -f "$HOME/Library/Application Scripts/com.dropbox.foldertagger" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.getdropbox.dropbox.fileprovider
echo "Removing $HOME/Library/Application Scripts/com.getdropbox.dropbox.fileprovider..."
if [ -d "$HOME/Library/Application Scripts/com.getdropbox.dropbox.fileprovider" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.getdropbox.dropbox.fileprovider" ]; then
    rm -f "$HOME/Library/Application Scripts/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.getdropbox.dropbox.garcon
echo "Removing $HOME/Library/Application Scripts/com.getdropbox.dropbox.garcon..."
if [ -d "$HOME/Library/Application Scripts/com.getdropbox.dropbox.garcon" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.getdropbox.dropbox.garcon" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.getdropbox.dropbox.garcon" ]; then
    rm -f "$HOME/Library/Application Scripts/com.getdropbox.dropbox.garcon" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Scripts/com.getdropbox.dropbox.TransferExtension
echo "Removing $HOME/Library/Application Scripts/com.getdropbox.dropbox.TransferExtension..."
if [ -d "$HOME/Library/Application Scripts/com.getdropbox.dropbox.TransferExtension" ]; then
    rm -rf "$HOME/Library/Application Scripts/com.getdropbox.dropbox.TransferExtension" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Scripts/com.getdropbox.dropbox.TransferExtension" ]; then
    rm -f "$HOME/Library/Application Scripts/com.getdropbox.dropbox.TransferExtension" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/Dropbox
echo "Removing $HOME/Library/Application Support/Dropbox..."
if [ -d "$HOME/Library/Application Support/Dropbox" ]; then
    rm -rf "$HOME/Library/Application Support/Dropbox" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/Dropbox" ]; then
    rm -f "$HOME/Library/Application Support/Dropbox" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/DropboxElectron
echo "Removing $HOME/Library/Application Support/DropboxElectron..."
if [ -d "$HOME/Library/Application Support/DropboxElectron" ]; then
    rm -rf "$HOME/Library/Application Support/DropboxElectron" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/DropboxElectron" ]; then
    rm -f "$HOME/Library/Application Support/DropboxElectron" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/FileProvider/com.getdropbox.dropbox.fileprovider
echo "Removing $HOME/Library/Application Support/FileProvider/com.getdropbox.dropbox.fileprovider..."
if [ -d "$HOME/Library/Application Support/FileProvider/com.getdropbox.dropbox.fileprovider" ]; then
    rm -rf "$HOME/Library/Application Support/FileProvider/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/FileProvider/com.getdropbox.dropbox.fileprovider" ]; then
    rm -f "$HOME/Library/Application Support/FileProvider/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/CloudKit/com.apple.bird/iCloud.com.getdropbox.Dropbox
echo "Removing $HOME/Library/Caches/CloudKit/com.apple.bird/iCloud.com.getdropbox.Dropbox..."
if [ -d "$HOME/Library/Caches/CloudKit/com.apple.bird/iCloud.com.getdropbox.Dropbox" ]; then
    rm -rf "$HOME/Library/Caches/CloudKit/com.apple.bird/iCloud.com.getdropbox.Dropbox" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/CloudKit/com.apple.bird/iCloud.com.getdropbox.Dropbox" ]; then
    rm -f "$HOME/Library/Caches/CloudKit/com.apple.bird/iCloud.com.getdropbox.Dropbox" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.dropbox.DropboxMacUpdate
echo "Removing $HOME/Library/Caches/com.dropbox.DropboxMacUpdate..."
if [ -d "$HOME/Library/Caches/com.dropbox.DropboxMacUpdate" ]; then
    rm -rf "$HOME/Library/Caches/com.dropbox.DropboxMacUpdate" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.dropbox.DropboxMacUpdate" ]; then
    rm -f "$HOME/Library/Caches/com.dropbox.DropboxMacUpdate" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.dropbox.DropboxUpdater
echo "Removing $HOME/Library/Caches/com.dropbox.DropboxUpdater..."
if [ -d "$HOME/Library/Caches/com.dropbox.DropboxUpdater" ]; then
    rm -rf "$HOME/Library/Caches/com.dropbox.DropboxUpdater" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.dropbox.DropboxUpdater" ]; then
    rm -f "$HOME/Library/Caches/com.dropbox.DropboxUpdater" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.getdropbox.dropbox
echo "Removing $HOME/Library/Caches/com.getdropbox.dropbox..."
if [ -d "$HOME/Library/Caches/com.getdropbox.dropbox" ]; then
    rm -rf "$HOME/Library/Caches/com.getdropbox.dropbox" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.getdropbox.dropbox" ]; then
    rm -f "$HOME/Library/Caches/com.getdropbox.dropbox" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.getdropbox.DropboxMetaInstaller
echo "Removing $HOME/Library/Caches/com.getdropbox.DropboxMetaInstaller..."
if [ -d "$HOME/Library/Caches/com.getdropbox.DropboxMetaInstaller" ]; then
    rm -rf "$HOME/Library/Caches/com.getdropbox.DropboxMetaInstaller" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.getdropbox.DropboxMetaInstaller" ]; then
    rm -f "$HOME/Library/Caches/com.getdropbox.DropboxMetaInstaller" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.dropbox.DropboxMacUpdate
echo "Removing $HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.dropbox.DropboxMacUpdate..."
if [ -d "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.dropbox.DropboxMacUpdate" ]; then
    rm -rf "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.dropbox.DropboxMacUpdate" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.dropbox.DropboxMacUpdate" ]; then
    rm -f "$HOME/Library/Caches/com.plausiblelabs.crashreporter.data/com.dropbox.DropboxMacUpdate" 2>/dev/null || true
fi

# Remove $HOME/Library/CloudStorage/Dropbox
echo "Removing $HOME/Library/CloudStorage/Dropbox..."
if [ -d "$HOME/Library/CloudStorage/Dropbox" ]; then
    rm -rf "$HOME/Library/CloudStorage/Dropbox" 2>/dev/null || true
elif [ -f "$HOME/Library/CloudStorage/Dropbox" ]; then
    rm -f "$HOME/Library/CloudStorage/Dropbox" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.dropbox.activityprovider
echo "Removing $HOME/Library/Containers/com.dropbox.activityprovider..."
if [ -d "$HOME/Library/Containers/com.dropbox.activityprovider" ]; then
    rm -rf "$HOME/Library/Containers/com.dropbox.activityprovider" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.dropbox.activityprovider" ]; then
    rm -f "$HOME/Library/Containers/com.dropbox.activityprovider" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.dropbox.alternatenotificationservice
echo "Removing $HOME/Library/Containers/com.dropbox.alternatenotificationservice..."
if [ -d "$HOME/Library/Containers/com.dropbox.alternatenotificationservice" ]; then
    rm -rf "$HOME/Library/Containers/com.dropbox.alternatenotificationservice" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.dropbox.alternatenotificationservice" ]; then
    rm -f "$HOME/Library/Containers/com.dropbox.alternatenotificationservice" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.dropbox.foldertagger
echo "Removing $HOME/Library/Containers/com.dropbox.foldertagger..."
if [ -d "$HOME/Library/Containers/com.dropbox.foldertagger" ]; then
    rm -rf "$HOME/Library/Containers/com.dropbox.foldertagger" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.dropbox.foldertagger" ]; then
    rm -f "$HOME/Library/Containers/com.dropbox.foldertagger" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.getdropbox.dropbox.fileprovider
echo "Removing $HOME/Library/Containers/com.getdropbox.dropbox.fileprovider..."
if [ -d "$HOME/Library/Containers/com.getdropbox.dropbox.fileprovider" ]; then
    rm -rf "$HOME/Library/Containers/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.getdropbox.dropbox.fileprovider" ]; then
    rm -f "$HOME/Library/Containers/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.getdropbox.dropbox.garcon
echo "Removing $HOME/Library/Containers/com.getdropbox.dropbox.garcon..."
if [ -d "$HOME/Library/Containers/com.getdropbox.dropbox.garcon" ]; then
    rm -rf "$HOME/Library/Containers/com.getdropbox.dropbox.garcon" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.getdropbox.dropbox.garcon" ]; then
    rm -f "$HOME/Library/Containers/com.getdropbox.dropbox.garcon" 2>/dev/null || true
fi

# Remove $HOME/Library/Containers/com.getdropbox.dropbox.TransferExtension
echo "Removing $HOME/Library/Containers/com.getdropbox.dropbox.TransferExtension..."
if [ -d "$HOME/Library/Containers/com.getdropbox.dropbox.TransferExtension" ]; then
    rm -rf "$HOME/Library/Containers/com.getdropbox.dropbox.TransferExtension" 2>/dev/null || true
elif [ -f "$HOME/Library/Containers/com.getdropbox.dropbox.TransferExtension" ]; then
    rm -f "$HOME/Library/Containers/com.getdropbox.dropbox.TransferExtension" 2>/dev/null || true
fi

# Remove $HOME/Library/Dropbox
echo "Removing $HOME/Library/Dropbox..."
if [ -d "$HOME/Library/Dropbox" ]; then
    rm -rf "$HOME/Library/Dropbox" 2>/dev/null || true
elif [ -f "$HOME/Library/Dropbox" ]; then
    rm -f "$HOME/Library/Dropbox" 2>/dev/null || true
fi

# Remove $HOME/Library/Dropbox/DropboxMacUpdate.app/Contents/MacOS/DropboxMacUpdate
echo "Removing $HOME/Library/Dropbox/DropboxMacUpdate.app/Contents/MacOS/DropboxMacUpdate..."
if [ -d "$HOME/Library/Dropbox/DropboxMacUpdate.app/Contents/MacOS/DropboxMacUpdate" ]; then
    rm -rf "$HOME/Library/Dropbox/DropboxMacUpdate.app/Contents/MacOS/DropboxMacUpdate" 2>/dev/null || true
elif [ -f "$HOME/Library/Dropbox/DropboxMacUpdate.app/Contents/MacOS/DropboxMacUpdate" ]; then
    rm -f "$HOME/Library/Dropbox/DropboxMacUpdate.app/Contents/MacOS/DropboxMacUpdate" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/*.com.getdropbox.dropbox.sync
echo "Removing $HOME/Library/Group Containers/*.com.getdropbox.dropbox.sync..."
if [ -d "$HOME/Library/Group Containers/*.com.getdropbox.dropbox.sync" ]; then
    rm -rf "$HOME/Library/Group Containers/*.com.getdropbox.dropbox.sync" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/*.com.getdropbox.dropbox.sync" ]; then
    rm -f "$HOME/Library/Group Containers/*.com.getdropbox.dropbox.sync" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/com.dropbox.client.crashpad
echo "Removing $HOME/Library/Group Containers/com.dropbox.client.crashpad..."
if [ -d "$HOME/Library/Group Containers/com.dropbox.client.crashpad" ]; then
    rm -rf "$HOME/Library/Group Containers/com.dropbox.client.crashpad" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/com.dropbox.client.crashpad" ]; then
    rm -f "$HOME/Library/Group Containers/com.dropbox.client.crashpad" 2>/dev/null || true
fi

# Remove $HOME/Library/Group Containers/com.getdropbox.dropbox.garcon
echo "Removing $HOME/Library/Group Containers/com.getdropbox.dropbox.garcon..."
if [ -d "$HOME/Library/Group Containers/com.getdropbox.dropbox.garcon" ]; then
    rm -rf "$HOME/Library/Group Containers/com.getdropbox.dropbox.garcon" 2>/dev/null || true
elif [ -f "$HOME/Library/Group Containers/com.getdropbox.dropbox.garcon" ]; then
    rm -f "$HOME/Library/Group Containers/com.getdropbox.dropbox.garcon" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.dropbox.DropboxMacUpdate
echo "Removing $HOME/Library/HTTPStorages/com.dropbox.DropboxMacUpdate..."
if [ -d "$HOME/Library/HTTPStorages/com.dropbox.DropboxMacUpdate" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.dropbox.DropboxMacUpdate" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.dropbox.DropboxMacUpdate" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.dropbox.DropboxMacUpdate" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.getdropbox.dropbox
echo "Removing $HOME/Library/HTTPStorages/com.getdropbox.dropbox..."
if [ -d "$HOME/Library/HTTPStorages/com.getdropbox.dropbox" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.getdropbox.dropbox" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.getdropbox.dropbox" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.getdropbox.dropbox" 2>/dev/null || true
fi

# Remove $HOME/Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist
echo "Removing $HOME/Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist..."
if [ -d "$HOME/Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist" ]; then
    rm -rf "$HOME/Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist" ]; then
    rm -f "$HOME/Library/LaunchAgents/com.dropbox.DropboxMacUpdate.agent.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Logs/Dropbox_debug.log
echo "Removing $HOME/Library/Logs/Dropbox_debug.log..."
if [ -d "$HOME/Library/Logs/Dropbox_debug.log" ]; then
    rm -rf "$HOME/Library/Logs/Dropbox_debug.log" 2>/dev/null || true
elif [ -f "$HOME/Library/Logs/Dropbox_debug.log" ]; then
    rm -f "$HOME/Library/Logs/Dropbox_debug.log" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.apple.FileProvider/com.getdropbox.dropbox.fileprovider
echo "Removing $HOME/Library/Preferences/com.apple.FileProvider/com.getdropbox.dropbox.fileprovider..."
if [ -d "$HOME/Library/Preferences/com.apple.FileProvider/com.getdropbox.dropbox.fileprovider" ]; then
    rm -rf "$HOME/Library/Preferences/com.apple.FileProvider/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.apple.FileProvider/com.getdropbox.dropbox.fileprovider" ]; then
    rm -f "$HOME/Library/Preferences/com.apple.FileProvider/com.getdropbox.dropbox.fileprovider" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.dropbox.DropboxMacUpdate.plist
echo "Removing $HOME/Library/Preferences/com.dropbox.DropboxMacUpdate.plist..."
if [ -d "$HOME/Library/Preferences/com.dropbox.DropboxMacUpdate.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.dropbox.DropboxMacUpdate.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.dropbox.DropboxMacUpdate.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.dropbox.DropboxMacUpdate.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.dropbox.DropboxMonitor.plist
echo "Removing $HOME/Library/Preferences/com.dropbox.DropboxMonitor.plist..."
if [ -d "$HOME/Library/Preferences/com.dropbox.DropboxMonitor.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.dropbox.DropboxMonitor.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.dropbox.DropboxMonitor.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.dropbox.DropboxMonitor.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.dropbox.tungsten.helper.plist
echo "Removing $HOME/Library/Preferences/com.dropbox.tungsten.helper.plist..."
if [ -d "$HOME/Library/Preferences/com.dropbox.tungsten.helper.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.dropbox.tungsten.helper.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.dropbox.tungsten.helper.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.dropbox.tungsten.helper.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.getdropbox.dropbox.plist
echo "Removing $HOME/Library/Preferences/com.getdropbox.dropbox.plist..."
if [ -d "$HOME/Library/Preferences/com.getdropbox.dropbox.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.getdropbox.dropbox.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.getdropbox.dropbox.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.getdropbox.dropbox.plist" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
